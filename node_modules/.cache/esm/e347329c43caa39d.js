let express,cors,multer,MethodOverride,uuid;_43c‍.w("express",[["default",["express"],function(v){express=v}]]);_43c‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_43c‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_43c‍.w("method-override",[["default",["MethodOverride"],function(v){MethodOverride=v}]]);_43c‍.w("uuid",[["v4",["uuid"],function(v){uuid=v}]]);







const server = express();
const log = _43c‍.g.console.log;
let port = process.env.PORT || 3000;

server.use(cors());
/* server.unsubscribe(express.json());
server.use(express.urlencoded({extended:true})); */

const multerConfig = multer.diskStorage({
    destination: function (res, file, cb) {//cb callback
        cb(null, "./bucket")
    },
    filename: function (res, file, cb) {
        cb(null, `${idImage}.${file.originalname}`);
    },
});

const multerMiddle = multer({
    storage: multerConfig
});

server.get("/", (req, res) => {
    res.send("start endpoint")
});

server.post("/upload", multerMiddle.single("imagefile"), (req, res) => {
    res.send("imagen guardada...")
});

server.listen(port, () => {
    console.log("start server");
});